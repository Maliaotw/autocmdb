"""
Django settings for AutoCmdb project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import logging
import os
import sys
from pathlib import Path

import environ

logger = logging.getLogger(__name__)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).resolve().parent.parent.parent
APPS_DIR = os.path.join(BASE_DIR, 'apps')
sys.path.insert(0, APPS_DIR)

env = environ.Env()
env_file = os.path.join(BASE_DIR, ".env")
if os.path.isfile(env_file):
    # Use a local secret file, if provided
    env.read_env(env_file)

# Quick-start development settings - unsuitable for production
ENV_MODE = os.environ.get('ENV_MODE')

# SECURITY WARNING: keep the secret key used in production secret!
# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY = env("DJANGO_SECRET_KEY", default='dzzj04$)w*(r2ihr$m-3$i)ts-(&xsog_u!@^87a889$u)32wm')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

LOCAL_APPS = [
    'apps.authentication.apps.AuthenticationConfig',
    'apps.host.apps.HostappConfig',
    'apps.asset.apps.AssetConfig',
    'apps.api.apps.ApiConfig',
    'apps.vm.apps.VmConfig',
    'apps.tasks.apps.TasksConfig',
    'apps.settings.apps.SettingsConfig',
]

THIRD_PARTY = [
    'django_celery_beat',
    'django_celery_results',
    'rest_framework',
    'django_filters',
    'widget_tweaks',
]

INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_PARTY

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    STATIC_DIR,  # add statics path
)
STATIC_ROOT = os.path.join(BASE_DIR, "data", "static")

# MEDIA
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#media-root
MEDIA_ROOT = str(BASE_DIR / "media")
# https://docs.djangoproject.com/en/dev/ref/settings/#media-url
MEDIA_URL = "/media/"

PEMS_URL = '/pems/'
PEMS_ROOT = os.path.join(BASE_DIR, 'apps/vm/pems')

# File Path
# https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-MEDIA_ROOT


LOGIN_URL = "/login/"

# IDRAC
IDRAC_USER = os.environ.get('IDRAC_USER')
IDRAC_PASSWD = os.environ.get('IDRAC_PASSWD')

# manage_user

MANAGE_USER = os.environ.get('MANAGE_USER')
MANAGE_PASSWD = os.environ.get('MANAGE_PASSWD')

# VCENTER
VCENTER_SERVER = os.environ.get('VCENTER_SERVER')
VCENTER_USER = os.environ.get('VCENTER_USER')
VCENTER_PASS = os.environ.get('VCENTER_PASS')

VCENTER = dict(
    VCENTER_SERVER=VCENTER_SERVER,
    VCENTER_USER=VCENTER_USER,
    VCENTER_PASS=VCENTER_PASS,
)

BOOTSTRAPTOKEN = os.environ.get('WithBootstrapToken')

# SESSION
# SESSION_COOKIE_AGE = 60 * 30  # 設置session過期時間為30分鐘
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 當瀏覽器被關閉的時候將session失效，但是不能刪除數據庫的session數據
# SESSION_SAVE_EVERY_REQUEST = True  # 每次請求都要保存一下session

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s "
                      "%(process)d %(thread)d %(message)s"
        },
        'normal': {
            'format': '[%(levelname)s] %(asctime)s | %(name)s:%(lineno)d | %(message)s'
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "normal",
        }
    },
    "root": {"level": "DEBUG", "handlers": ["console"]},
}
